version: "3"
services:
    # PHP Service
    api:
        build:
            context: .
            dockerfile: Dockerfile
        image: league-simulator-api
        container_name: api
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - "8000:8000"
        networks:
            - app-network

    # Frontend Service (VueJS)
    node:
        build:
            context: .
            dockerfile: Dockerfile.node
        image: league-simulator-node
        container_name: node
        restart: unless-stopped
        tty: true
        ports:
            - "5173:5173"
        volumes:
            - ./:/var/www
            - /var/www/node_modules
        environment:
            - CHOKIDAR_USEPOLLING=true
            - HOST=0.0.0.0
        networks:
            - app-network
        command: sh -c "cd /var/www && npm run build && npm run dev"

    # Nginx Service
    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network

    # PostgreSQL Service
    postgres:
        image: postgres:14
        container_name: postgres
        restart: unless-stopped
        tty: true
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: league_simulator
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            SERVICE_TAGS: dev
            SERVICE_NAME: postgresql
        volumes:
            - dbdata:/var/lib/postgresql/data
        networks:
            - app-network

    # Redis Service
    cache:
        image: redis:alpine
        container_name: cache
        restart: unless-stopped
        tty: true
        ports:
            - "6379:6379"
        networks:
            - app-network

# Volumes
volumes:
    dbdata:
        driver: local

# Networks
networks:
    app-network:
        driver: bridge
